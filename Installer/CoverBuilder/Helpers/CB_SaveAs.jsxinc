
/*

--------------------------------------------

    CB_SaveAs.jsx                   (A CoverBuilder Helper Script)
    An InDesign CS5 Javascript      (Tested in CS6)
    Version 1.1

    Bruno Herfst 2014

    This script helps me with naming the file automatically to my file-naming conventions

--------------------------------------------

*/

(function() {
    //////////////
    // privates //
    //////////////
    function getBookTitleUI(){
        var thisTitle = null;
        var bookTitleUI = app.dialogs.add({name:String(myApp.Localise.Meta['WhatIsTheTitleOfThisBook']),canCancel:true});
        with(bookTitleUI){
            with(dialogColumns.add()){
                var titleEditField = textEditboxes.add({editContents:"", minWidth:200});
            }
         }
         var myResult = bookTitleUI.show();
         if(myResult == true){
             thisTitle = titleEditField.editContents;
         }
         bookTitleUI.destroy();
         return thisTitle;
    }

    function saveas(myApp) {
        var myCover = myApp.Tools.getActiveCover(myApp, true);
        var C = myApp.XMP.retrieveCoverObject(myApp, myCover);
        if(C != null){
            var myType = "_CVR_";
            var myH    = C.height;
            var myW    = "x" + C.width;
            var myS    = "x" + Math.floor(C.spine);
        } else { // Not a cover
            var myType = "_TXT_";
            var myW    = Math.floor(myCover.documentPreferences.pageWidth);
            var myH    = "x" + Math.floor(myCover.documentPreferences.pageHeight);
            var myS    = ""; // No spine
        }

        // Get or create doc name
        var booktitle = myCover.metadataPreferences.documentTitle;
        if( booktitle == ""){
            booktitle = getBookTitleUI();
            if( booktitle == null){
                return null; //bail
            }
            // safe the title as meta data
            myCover.metadataPreferences.documentTitle = booktitle;
        }
		// Update title to safe filename
        booktitle = booktitle.replace(/[^a-zA-Z0-9]/g, "");

        // Create temp-file with the right name
        var fileName = booktitle + myType + myH + myW + myS + "_MU00.indd";
        var tempfile = File(myApp.PathTo.settingsFolder + fileName);
        myCover.save(tempfile);

        var myMenu = app.menus.item("Main");
        var fileMenu = myMenu.menuElements.item(String(myApp.Localise.Menu['File']));
        var mySaveAsMenu = fileMenu.menuItems.item(String(myApp.Localise.Menu['SaveAs']));
        mySaveAsMenu.associatedMenuAction.invoke(tempfile.remove());
    }

    ////////////
    // expose //
    ////////////
    return {
        saveas : saveas
    };

})();