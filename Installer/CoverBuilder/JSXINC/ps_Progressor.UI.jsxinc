//// A progress bar UI// https://github.com/bxt/Photoshop-Javascript-Tools/blob/master/Progressor.jsxinc//(function() {	//////////////	// privates //	//////////////	/**	 * This is a Photoshop UI-Component to display neat progress bars	 */	 	var Start = function (names) {		// Localized messages (de,en)		var msg = {			cancel: {				de: "Abbrechen",				en: "Cancel"			},			cancelRequested: {				de: "Abbrechen angefragt. ",				en: 'Cancel requested. '			},			initializing: {				de: "Initialisierung...",				en: 'Initializing...'			},			// The localize() functions inserts values for us too:			progress: {				de: "Bearbeite %1 von %2...",				en: "Processing %1 of %2..."			},		};		// If the user has clicked the cancel button yet		var isCancelRequested = false;		// Create a window first		progressWindow = new Window('window', localize(names) /*window name*/ );		progressWindow.mainGroup = progressWindow.add('group');		// Align groups below eatch other		progressWindow.mainGroup.orientation = "column";		progressWindow.mainGroup.alignChildren = "right";		// Add groups		progressWindow.progressGroup = progressWindow.mainGroup.add('group');		progressWindow.statusGroup = progressWindow.mainGroup.add('group');		progressWindow.btnGroup = progressWindow.mainGroup.add('group');		// Add UI elements		// Progress bar		progressWindow.progressbar = progressWindow.progressGroup.add('progressbar');		progressWindow.progressbar.preferredSize = [400, 20]; // make 400px wide		// Status text		progressWindow.stautsText = progressWindow.statusGroup.add('statictext', undefined, localize(msg.initializing));		progressWindow.stautsText.preferredSize = [400, 20]; // make 400px wide too		// Cancel Button		progressWindow.cancelBtn = progressWindow.btnGroup.add('button', undefined, localize(msg.cancel));		progressWindow.cancelBtn.onClick = function () { // cancel event handler			isCancelRequested = true;			progressWindow.stautsText.text = localize(msg.cancelRequested);		}		// Show the window		progressWindow.show();		// export methods for outside control		var self = {			// Indicate progression of the script			progress: function (i, of) {				progressWindow.progressbar.value = Math.round(100 * i / of);				progressWindow.stautsText.text = localize(msg.progress, i + 1, of);			},			// Call at the end of the script			done: function () {				progressWindow.close();			},			// Poll while exectuing, abort when true			isCancelRequested: function () {				return isCancelRequested;			}		};		return self;	};		////////////	// expose //	////////////  	return {  		Start : Start	};})();